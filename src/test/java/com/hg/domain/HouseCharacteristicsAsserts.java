package com.hg.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class HouseCharacteristicsAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertHouseCharacteristicsAllPropertiesEquals(HouseCharacteristics expected, HouseCharacteristics actual) {
        assertHouseCharacteristicsAutoGeneratedPropertiesEquals(expected, actual);
        assertHouseCharacteristicsAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertHouseCharacteristicsAllUpdatablePropertiesEquals(HouseCharacteristics expected, HouseCharacteristics actual) {
        assertHouseCharacteristicsUpdatableFieldsEquals(expected, actual);
        assertHouseCharacteristicsUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertHouseCharacteristicsAutoGeneratedPropertiesEquals(HouseCharacteristics expected, HouseCharacteristics actual) {
        assertThat(expected)
            .as("Verify HouseCharacteristics auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertHouseCharacteristicsUpdatableFieldsEquals(HouseCharacteristics expected, HouseCharacteristics actual) {
        assertThat(expected)
            .as("Verify HouseCharacteristics relevant properties")
            .satisfies(e -> assertThat(e.getCode()).as("check code").isEqualTo(actual.getCode()))
            .satisfies(e -> assertThat(e.getGroup()).as("check group").isEqualTo(actual.getGroup()))
            .satisfies(e -> assertThat(e.getPrimaryToUser()).as("check primaryToUser").isEqualTo(actual.getPrimaryToUser()))
            .satisfies(e -> assertThat(e.getDeleted()).as("check deleted").isEqualTo(actual.getDeleted()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertHouseCharacteristicsUpdatableRelationshipsEquals(HouseCharacteristics expected, HouseCharacteristics actual) {
        assertThat(expected)
            .as("Verify HouseCharacteristics relationships")
            .satisfies(e -> assertThat(e.getProperty()).as("check property").isEqualTo(actual.getProperty()));
    }
}
